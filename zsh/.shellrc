# -*- Mode: shell-script -*-
# My custom settings
export PATH=~/bin:$PATH
export PATH=$PATH:~/.local/bin

# What I am currently working on
alias cdn='cd ~/workarea/teaching/data-projects/jvm/scala/'

# My current note taking setup
alias cdnotes='cd ~/workarea/challenges/100-days-of-scala/notes/'

# Common aliases
alias du1='du --max-depth=1 -h'

# Git related aliases
alias gita='git add .'
alias gitad='git add . --dry-run'
alias gitc='git commit -am '
alias gits='git status'

source ~/.profile

if [ -d /opt/ide/android-studio ]; then
    export ANDROID_STUDIO=/opt/ide/android-studio
    export PATH=$PATH:$ANDROID_STUDIO/bin
fi

# flutter and dart paths (if they exist)
if [ -d /opt/infrastructure/flutter ]; then
    export DART_HOME=/opt/infrastructure/flutter/bin/cache/dart-sdk
    export PATH=$PATH:$DART_HOME/bin
    export PATH=$PATH:/opt/infrastructure/flutter/bin
    export PATH=$PATH:~/.pub-cache/bin
fi

# Spark related
if [ -d /opt/data-engineering/spark ]; then
    export PATH=$PATH:/opt/data-engineering/spark/bin
fi

# Python related settings -----------------------------------------------------
## Enable virtualenv wrapper if exists
VIRTUALENVWRAPPER_SCRIPT=~/.local/bin/virtualenvwrapper.sh
VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3

if [ -f $VIRTUALENVWRAPPER_SCRIPT ]; then
    export WORKON_HOME=/opt/home/mukund/.virtualenvs
    . $VIRTUALENVWRAPPER_SCRIPT 
    export PATH=$PATH:~/.local/bin
fi

PYENV_PATH=~/.pyenv
if [ -d $PYENV_PATH ]; then
    export PATH=~/.pyenv/bin:$PATH
    eval "$(pyenv init -)"
    eval "$(pyenv virtualenv-init -)"
fi


# Java / JVM related config ---------------------------------------------------

# CS deps path
export PATH="/home/mukund/.local/share/coursier/bin:$PATH"

# I manage my jvm's via Coursier
eval "$(cs java --jvm 21 --env)"

#if [ -d /opt/infrastructure/build/gradle ]; then
    #export GRADLE_HOME=/opt/infrastructure/build/gradle
    #export PATH=$PATH:$GRADLE_HOME/bin
#fi

# Clojure related
CLOJURE_PATH=/opt/jvm/clojure
export PATH=$PATH:$CLOJURE_PATH/bin


# SPRING FRAMEWORK RELATED
# source ~/.sdkman/candidates/springboot/current/shell-completion/bash/spring

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
# export SDKMAN_DIR="/opt/home/mukund/.sdkman"
# [[ -s "/opt/home/mukund/.sdkman/bin/sdkman-init.sh" ]] && source "/opt/home/mukund/.sdkman/bin/sdkman-init.sh"

# source "$HOME/.cargo/env"

# ASDF
## I use ASDF to manage my ruby / python / node setup

if [ -d ~/.asdf ]; then
    . $HOME/.asdf/asdf.sh
fi

# Golang related config
export PATH=$PATH:/opt/infrastructure/golang/go/bin/


# Nim lang related stuff
export PATH=/home/mukund/.nimble/bin:$PATH


# Onsite go work --------------------------------------------------------------
export ONSITE=/srv/www/warehouse/analytics/
alias onsite='cd $ONSITE'

export ONSITE_BACKEND=/srv/www/onsitego/
alias obackend='cd $ONSITE_BACKEND'


# aliases to make work easy

alias reshell='source ~/.shellrc'
alias elib-sync='cd /srv/www/eventlib-sync/'
alias elib-async='cd /srv/www/eventlib-async/'

alias workon-rabbitmq='cd /srv/www/microservice-starter/'

alias down_all='COMPOSE_PROJECT_NAME=abcd docker-compose -f docker-compose.development.yml down'
alias up_backend='COMPOSE_PROJECT_NAME=abcd docker-compose -f docker-compose.warehouse.yml up backend'

# Learn clojure work
export CLOJURE_WORKSPACE=~/computer/programming/clojure/
alias workonclojure='cd $CLOJURE_WORKSPACE'

# Learn RabbitMQ
export RABBITMQ_WORKSPACE=/opt/learn/rabbitmq
alias learn-rabbitmq='cd $RABBITMQ_WORKSPACE'

### Aliases to SSH servers
alias ssh-acs1='ssh ubuntu@13.233.17.182'
alias ssh-acs2='ssh -i ~/.ssh/onsite-web-mumbai.pem ubuntu@43.204.17.112'

### Rust toolchain for ESP32
alias get_esprs='. $HOME/export-esp.sh'


### AWS
export ACS1=ubuntu@13.233.17.182


### Docker
